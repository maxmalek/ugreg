// UNFINISHED. The identity server is not fully functional yet.
// DO NOT USE THIS. You have been warned.
{
"identity": {
    // webserver config
    "listen": [
        { "host": "0.0.0.0", "port": 8090, "ssl": false },
        //{ "host": "0.0.0.0", "port": 8091, "ssl": true }, // requires a valid cert if used
    ],
    "cert": "fullchain.pem", // Only used when server listens on SSL port
    "listen_threads": 0,
    
    // Fake presence of v1 identity server
    // Element checks for the v1 API only; enable this to suppress warnings about a non-functional identity server
    "fake_v1": true,
},

// -- Global 3pid database ---
// Required by the identity server, otherwise unused
"3pid": {
    "hashcache": {
        "pepperTime": "1h", // hash pepper is rotated after this time
        "pepperLen": [24, 40], // each hash pepper is this long; in [min, max]
    },
    "wellknown": {
        "cacheTime": "1h", // well-known/SRV entries are cached this long before re-requesting
        "failTime": "10m", // failed well-known/SRV lookups are cached as failed for this long
        "requestTimeout": "5s", // timeout when looking up homeservers via .well-known or SRV record before a request is considered failed
        "requestMaxSize": 50000, // truncate reply after this many bytes (protection against malicious servers)
    },
    "register": {
        "maxTime": "24h", // max. allowable session length until clients need to request a new token
    },
    "hashes": {
        // per-hash settings:
        // lazy [bool]: regenerate hashes only when a client asks for a hash of this type. Saves RAM. Default: true
        // default:  { "lazy": true  },
        "sha256":    { "lazy": true  }, // must be present and enabled according to the matrix spec
        //"none":      { "lazy": true  }, // if enabled, allows for bulk lookup and substring matching
        "sha512":    { "lazy": true  },
        "sha3-512":  { "lazy": true  },
    },
    "minSearchLen": 2, // any search term must be at least this long; else it's ignored
    "media": { // field => medium
        "mail": "email",
    }
}
}
